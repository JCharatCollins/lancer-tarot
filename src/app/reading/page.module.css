.main {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
  padding: 6rem;
  min-height: 100vh;
}

.title {
  width: 80%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 10px;
  border-bottom: 2px solid rgba(var(--callout-border-rgb), 0.3);
}

.title h1 {
  font-size: 5rem;
  padding: 5px;
}

.title h3 {
  font-style: italic;
  font-size: 0.85rem;
  font-weight: lighter;
  padding: 5px;
}

.title h2 {
  text-align: center;
  font-style: italic;
  font-size: 1rem;
  font-weight: lighter;
  padding: 5px;
}

.readingImage {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  border: 4px solid white;
  margin: 20px;
}

.readingImage img {
  margin: 20px;
  filter: invert(1)
}

.panel {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  background-color: rgb(var(--panel-rgb));
}

.panel h2 {
  padding: 10px;
  font-size: 2rem;
}

.panelText {
  width: 100%;
  background-color: rgba(var(--panel-text-rgb), 1.0);
  padding: 10px;
}

.panelText p {
  font-family: var(--font-mono);
  padding-top: 5px;
  padding-bottom: 5px;
}

.threePaths {
  position: relative;
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: flex-end;
  margin: 10px;
}

.threePaths h3 {
  text-align: center;
  font-style: italic;
  font-size: 1.5rem;
  font-weight: lighter;
  padding: 5px;
}

.threePaths h2 {
  text-align: center;
  font-size: 3rem;
  padding: 5px;
}

.path {
  position: relative;
  flex: 1;
  padding: 10px;
}

.getReadingContainer {
  overflow: visible;
  position: relative;
  margin-top: 20px;
}

.getReadingButton {
  height: 10vh;
  width: 20vw;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 20px;
  background-color: rgb(var(--callout-border-rgb));
  border: 0px solid;
  border-radius: 8px;
}

.getReadingButton:hover {
  filter: brightness(1.25);
}

.getReadingButton::after {
  content: '';
  position: absolute;
  height: 10vh;
  width: 20vw;
  border-radius: 8px;
  box-shadow:
    0 0 50px #fff,            /* outer white */
    -10px 0 80px #f0f,        /* outer left magenta */
    10px 0 80px #0ff;         /* outer right cyan */
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.getReadingButton:hover::after {
  opacity: 1;
}

.getReadingButton img {
  filter: invert(1);
}

.getReadingButton h3 {
  position: relative;
  font-size: 1.5rem;
  font-weight: bold;
}

.pathText {
  width: 100%;
  height: 100%;
  overflow: hidden;
  background-color: rgba(var(--panel-text-rgb), 0.5);
  padding: 10px;
  border-top: 5px solid rgba(var(--callout-border-rgb), 0.8);
}

.pathText h4 {
  color: rgb(var(--callout-border-rgb));
  font-family: var(--font-mono);
  font-style: italic;
}

.pathText p {
  font-family: var(--font-mono);
  padding-top: 5px;
  padding-bottom: 5px;
}

.cardContainer {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  gap: 15px;
  align-items: center;
}

 /* The flip card container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */
.flipCard {
  position: relative;
  background-color: transparent;
  width: 300px;
  height: 518px;
  perspective: 1000px; /* Remove this if you don't want the 3D effect */
}

/* This container is needed to position the front and back side */
.flipCardInner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.8s;
  transform-style: preserve-3d;
}

/* Do an horizontal flip when you move the mouse over the flip box container */
.flipCard:focus .flipCardInner {
  transform: rotateY(180deg);
}

/* Position the front and back side */
.flipCardFront, .flipCardBack {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden; /* Safari */
  backface-visibility: hidden;
}

/* Style the front side (fallback if image is missing) */
.flipCardFront {
  background-color: #bbb;
  color: black;
}

/* Highlight card */
.flipCardFront:hover {
  filter: brightness(1.25);
}

.flipCardFront::after {
  content: '';
  inset: 0 0 0 0;
  position: absolute;
  height: 518px;
  width: 300px;
  border-radius: 8px;
  box-shadow:
    0 0 50px #fff,            /* outer white */
    -10px 0 80px rgb(255, 230, 0),        /* outer left magenta */
    10px 0 80px rgb(255, 64, 0);         /* outer right cyan */
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.flipCardFront:hover::after {
  opacity: 1;
}

/* Style the back side */
.flipCardBack {
  background-color: dodgerblue;
  color: white;
  transform: rotateY(180deg);
}

.flipCardBack:hover {
  filter: brightness(1.25);
}

.flipCardBack::before {
  content: '';
  inset: 0 0 0 0;
  position: absolute;
  height: 518px;
  width: 300px;
  border-radius: 8px;
  box-shadow:
    0 0 50px #fff,            /* outer white */
    -10px 0 80px rgb(0, 64, 255),        /* outer left magenta */
    10px 0 80px rgb(174, 0, 255);         /* outer right cyan */
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.flipCardBack:hover::before {
  opacity: 1;
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  padding: 4rem 0;
}

.center::before {
  background: var(--secondary-glow);
  border-radius: 50%;
  width: 480px;
  height: 360px;
  margin-left: -400px;
}

.center::after {
  background: var(--primary-glow);
  width: 240px;
  height: 180px;
  z-index: -1;
}

.center::before,
.center::after {
  content: "";
  left: 50%;
  position: absolute;
  filter: blur(45px);
  transform: translateZ(0);
}

.cardExplanations {
  width: 50%;
  height: 15vh;
  background-color: rgba(var(--panel-text-rgb), 0.5);
  border-top: 5px solid rgba(var(--callout-border-rgb), 0.8);
  margin-top: 20px;
  margin-bottom: 20px;
  padding: 10px;
  clip-path: polygon(100% 0,100% calc(100% - 15px),calc(100% - 15px) 100%,0 100%,0 0);
}

.cardExplanations h3 {
  width: 100%;
  font-size: 2rem;
  text-align: center;
}

.cardExplanations p {
  font-family: var(--font-mono);
  text-align: center;
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {

}

@media (prefers-reduced-motion) {

}

/* Mobile */
@media (max-width: 700px) {

  .title h2 {
    display: none;
  }

  .title h3 {
    display: none;
  }

  .threePaths {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: flex-end;
    margin: 10px;
  }

  .center {
    padding: 8rem 0 6rem;
  }

  .center::before {
    transform: none;
    height: 300px;
  }
}

/* Tablet and Smaller Desktop */
@media (min-width: 701px) and (max-width: 1120px) {
  .grid {
    grid-template-columns: repeat(2, 50%);
  }
}

/* Dark mode */
@media (prefers-color-scheme: dark) {
  .vercelLogo {
    filter: invert(1);
  }

  .sidebarHamburger img {
    filter: invert(0)
  }

  .logo {
    filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
  }
}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}
